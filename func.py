from config import *
from vk_api.keyboard import VkKeyboard
from classes import *
import connect
import random


def make_choice(peer_id,
                question,
                options):
    """
    :param bot:
    :param peer_id:
    :param question:
    :param options:
    :return: –°–ø–∏—Å–æ–∫ –Ω–∞–∏–º–µ–Ω–æ–≤–∞–Ω–∏–π, –≤—ã–±—Ä–∞–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º; "–û—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω" –∏–ª–∏ "–í—ã—Ö–æ–¥"
    """

    Message.Send(peer_id, question)

    choice = list()
    keyboard = Keyboard.Make(
        options=options,
        options_columns=4,
        options_selected=choice,
        items_before=[{'–í—ã–±—Ä–∞—Ç—å –í–°–ï': 'primary',
                       '–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞': 'default'}],
        items_after=[{'–í—ã—Ö–æ–¥': 'negative',
                      '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å': 'positive'}],
    )
    Message.Send(peer_id, '(–ß—Ç–æ–±—ã –≤—ã–±—Ä–∞—Ç—å\–æ—Ç–º–µ–Ω–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, –ø—Ä–æ—Å—Ç–æ –Ω–∞–∂–∏–º–∞–π—Ç–µ –Ω–∞ –Ω–∏—Ö)', keyboard=keyboard)


    while True:
        text = Message.Get(peer_id)

        if text not in options:

            if text == '–û—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω': # NoAnswer
                Message.Send(peer_id, '–í—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è –∏—Å—Ç–µ–∫–ª–æ', keyboard=VkKeyboard().get_empty_keyboard())
                return '–û—Ç–≤–µ—Ç –Ω–µ –ø–æ–ª—É—á–µ–Ω'

            elif text == '':
                continue

            elif text == '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å':
                if len(choice) == 0:
                    Message.Send(peer_id, '–ù–∏—á–µ–≥–æ –Ω–µ –≤—ã–±—Ä–∞–Ω–æ')
                    continue
                break

            elif text == '–í—ã—Ö–æ–¥':  # –í—ã—Ö–æ–¥
                Message.Send(peer_id, 'üòâ', keyboard=VkKeyboard().get_empty_keyboard())
                return '–í—ã—Ö–æ–¥'

            elif text == '–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞':
                choice = list()

            elif text == '–í—ã–±—Ä–∞—Ç—å –í–°–ï':
                choice = list(options)

            else:
                Message.Send(peer_id, '–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏')
                continue

        else:
            if text not in choice:
                choice.append(text)
            else:
                choice.remove(text)
        keyboard = Keyboard.Make(
            options=options,
            options_columns=4,
            options_selected=choice,
            items_before=[{'–í—ã–±—Ä–∞—Ç—å –í–°–ï': 'primary',
                           '–ù–∞—á–∞—Ç—å —Å–Ω–∞—á–∞–ª–∞': 'default'}],
            items_after=[{'–í—ã—Ö–æ–¥': 'negative',
                          '–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å': 'positive'}],
        )
        Message.Send(peer_id, 'üòâ', keyboard=keyboard)
    print(choice)
    Message.Send(peer_id, '–í—ã –≤—ã–±—Ä–∞–ª–∏ \n ‚Äî'+'\n ‚Äî'.join(choice))
    Message.Send(peer_id, 'üòâ', keyboard=VkKeyboard().get_empty_keyboard())
    return(choice)



#f = ['8–ï81','8–ï82','8–¢81','8–¢82','8–ö81','8–ö82','8–ò81','8–ò82', '8–í81', '8–í82', '4–ü81', '2–£92']
#make_choice(admin_id,'–í—ã–±–µ—Ä–∏—Ç–µ –≥—Ä—É–ø–ø—ã –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏', f)
#print(list)

